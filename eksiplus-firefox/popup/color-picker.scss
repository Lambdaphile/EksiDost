* {
    margin: 0;
    padding: 0;
}

body {
    background-color: blanchedalmond;
    height: 145px;
    width: 145px;
}

.purple {
    height: 35px;
    width: 35px;
    background-color: purple;
    border-radius: 50%;
    border: 1px solid black;
}

.green {
    height: 35px;
    width: 35px;
    background-color: green;
    border-radius: 50%;
    border: 1px solid black;
}

.yellow {
    height: 35px;
    width: 35px;
    background-color: yellow;
    border-radius: 50%;
    border: 1px solid black;
}

.tomato {
    height: 35px;
    width: 35px;
    background-color: orange;
    border-radius: 50%;
    border: 1px solid black;
}

.red {
    height: 35px;
    width: 35px;
    background-color: red;
    border-radius: 50%;
    border: 1px solid black;
}

.blue {
    height: 35px;
    width: 35px;
    background-color: blue;
    border-radius: 50%;
    border: 1px solid black;
}

.color-palette button {
    border: 2px solid white;
}

.color-palette button:hover {
    border: 2px solid white;
}

.picked {
    height: 35px;
    width: 35px;
    background-color: #8c4bc1;
    border-radius: 50%;
    border: 1px solid black;
}
/// Mixin to place items on a circle
/// @author Hugo Giraudel
/// @author Ana Tudor
/// @param {Integer} $item-count - Number of items on the circle
/// @param {Length} $circle-size - Large circle size
/// @param {Length} $item-size - Single item size
@mixin on-circle($item-count, $circle-size, $item-size) {
    position: relative;
    width:  $circle-size;
    height: $circle-size;
    padding: 0;
    border-radius: 50%; 
    list-style: none;       
    
    > * {
      display: block;
      position: absolute;
      top:  50%; 
      left: 50%;
      width:  $item-size;
      height: $item-size;
      margin: -($item-size / 2);
    
      $angle: (360 / $item-count);
      $rot: 0;
  
      @for $i from 1 through $item-count {
        &:nth-of-type(#{$i}) {
          transform: 
            rotate($rot * 1deg) 
            translate($circle-size / 2) 
            rotate($rot * -1deg);
        }
  
        $rot: $rot + $angle;
      }
    }
  }

  .color-palette {
      @include on-circle($item-count: 6, $circle-size: 100px, $item-size: 35px);

      margin: 25px;
      border: solid 5px yellowgreen;

      button { 
        display: block; 
        max-width: 100%; 
        border-radius: 50%;
        filter: grayscale(10%);
        border: solid 5px whitesmoke;
        transition: .15s;
        
        &:hover,
        &:active {
          filter: grayscale(0);
        }
      }

  }